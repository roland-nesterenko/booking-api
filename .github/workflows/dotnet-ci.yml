name: .NET Continuous Integration

on:
  pull_request:
    branches:
      - 'dev'
      - 'main'
  push:
    branches:
      - 'dev'
      - 'main'
  workflow_dispatch:

jobs:
  pre-check:
    if: ${{ github.triggering_actor != 'dependabot[bot]' }}

    runs-on: ubuntu-latest

    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages

    steps:
      - name: 📝 Fetch Sources 📝
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 💡 Perform Common Steps 💡
        uses: ./.github/workflows/common

      - name: 🛠 Build Solution 🛠
        shell: bash
        run: dotnet build -c Release Booking

      - name: ✅ Run Unit Tests ✅
        shell: bash
        run: dotnet test Booking
        
  sonarcloud_analysis:
    runs-on: ubuntu-latest
    
    needs: pre-check
    
    steps:
      - name: 🚀 Set up JDK 17 🚀
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: 📥 Checkout Code 📥
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: 📦 Cache SonarCloud Packages 📦
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 🗃️ Cache SonarCloud Scanner 🗃️
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: 🔧 Install SonarCloud Scanner 🔧
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ~/.sonar/scanner

      - name: 🔧 Install JetBrains dotCover 🔧
        run: dotnet tool install --global JetBrains.dotCover.CommandLineTools --version 2023.3.0

      - name: 🏗️  Build and Analyze 🏗️ 
        run: |
          ~/.sonar/scanner/dotnet-sonarscanner begin /k:"roland-nesterenko_booking-api" /o:"roland-nesterenko" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"  /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html
          dotnet build Booking
          dotnet-dotCover cover-dotnet --AttributeFilters="System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute" --Filters="-:*.Tests" --Output=dotCover.Output.html --ReportType=HTML -- test "Booking"
          ~/.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"